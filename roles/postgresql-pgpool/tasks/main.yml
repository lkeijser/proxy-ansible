---

#######
# Install postgres
#######

- name: install postgresql dependencies
  apt:
    pkg={{ item }}
    state=present
  with_items:
    - python-psycopg2
    - python-pycurl
  tags: postgresql-pgpool

- name: add postgresql repository apt-key
  apt_key:
    id=ACCC4CF8
    state=present
    url='https://www.postgresql.org/media/keys/ACCC4CF8.asc'
  tags: postgresql-pgpool

- name: add postgresql repository
  apt_repository:
    repo='deb http://apt.postgresql.org/pub/repos/apt/ {{ ansible_distribution_release }}-pgdg main'
    state=present
  tags: postgresql-pgpool

- name: install postgresql and postgresql-client
  apt:
    name={{ item }}
    state=present
  environment:
    LC_ALL: C
  with_items:
    - "postgresql-{{ postgresql_version|default('9.3') }}"
    - "postgresql-client-{{ postgresql_version|default('9.3') }}"
    - "postgresql-contrib-{{ postgresql_version|default('9.3') }}"
    - ptop
  tags: postgresql-pgpool

- name: Ensure postgres archive and bin directory exist
  file:
    path: /var/lib/postgresql/{{ postgresql_version|default('9.3') }}/main/{{ item }}/
    state: directory
    group: postgres
    owner: postgres
  with_items:
    - pg_archive
    - bin
  tags: postgresql-pgpool

######
# Install PGPool recovery scripts
######

- name: pgpool recovery scripts
  copy:
    src={{ item }}
    dest={{ postgres.data_dir }}/{{ item }}
    group=postgres
    owner=postgres
    mode=0700
  with_items:
    - pgpool_recovery_pitr
    - pgpool_remote_start
  tags: postgresql-pgpool

# /var/lib/postgresql/9.3/ copy is an original for recovery. During recovery the entire data_dir is wiped.
- name: copy pgpool recovery scripts from template
  template:
    src='pgpool-copy-base-backup.j2'
    dest="{{ item }}/pgpool-copy-base-backup"
    group=postgres
    owner=postgres
    mode=0700
  with_items:
    - "{{ postgres.data_dir }}"
    - /var/lib/postgresql/9.3/
  tags: postgresql-pgpool

######
# Install postgres configuration
######

- name: install postgresql.conf
  template:
    src='postgresql.conf.j2'
    dest="/etc/postgresql/{{ postgresql_version|default('9.3') }}/main/postgresql.conf"
  notify: restart postgresql
  tags: postgresql-pgpool

- name: install pg_hba.conf
  template:
    src=pg_hba.conf.j2
    dest="/etc/postgresql/{{ postgresql_version|default('9.3') }}/main/pg_hba.conf"
  notify: restart postgresql
  tags: postgresql-pgpool

######
# Configure PGPool extensions
######

- name: install pgnode dependencies
  apt:
    name=postgresql-{{ postgresql_version|default('9.3') }}-pgpool2
    state=present
  tags:
    - postgresql

- name: Setup pgpool extensions on template1
  sudo: yes
  sudo_user: postgres
  command: "psql -f /usr/share/postgresql/{{ postgresql_version|default('9.3') }}/extension/pgpool-recovery.sql template1"
  tags: postgresql-pgpool

#######
# Create default users
#######

#- name: Create database users
#  sudo: yes
#  sudo_user: postgres
#  postgresql_user:
#      name="{{ item.username }}"
#      password="{{ item.password }}"
#      role_attr_flags="SUPERUSER" # This is broken as of 180315. Not fixed due to upcoming story of changing privileges per user for security.
#  with_items: db_users
#  tags: postgresql-pgpool

- name: Add users to postgres
  sudo: yes
  postgresql_user:
    name: "{{ item.username }}"
    encrypted: yes
    password: "{{ item.password }}"
    role_attr_flags: "{{ item.role|default('superuser') }}"
    state: present
  sudo_user: postgres
  with_items: db_users
  tags: postgresql-pgpool

- name: Add databases to postgres
  sudo: yes
  postgresql_db:
    name: "{{ item.name }}"
    owner: "{{ item.owner }}"
    state: present
  sudo_user: postgres
  with_items: databases
  tags: postgresql-pgpool

#######
# Install shared SSH key for file transfers
#######

- name: Ensure postgres .ssh directory exists
  file:
    path: ~postgres/.ssh/
    state: directory
    group: postgres
    owner: postgres
  tags: postgresql-pgpool

- name: postgres user ssh key for file transfer
  copy:
    src="{{ target_environment }}/files/sqlserver/ssh/{{ item }}"
    dest=~postgres/.ssh/{{ item }}
    group=postgres
    owner=postgres
    mode=0600
  with_items:
    - config
    - id_rsa
    - id_rsa.pub
    - authorized_keys
  tags: postgresql-pgpool
